@model TaskGroupVehicleViewModel

@{
    var groupedData = Model.TaskGroups.GroupBy(item => item.GroupName).ToList();
}


 @* <div class="container mt-3">
    <div class="d-flex align-items-center mb-3" style="">
        <button class="btn btn-color me-4 " data-bs-toggle="modal" data-bs-target="#assignModal">Vehicle Selection</button>
        <button class="btn btn-color">Shuffle</button>
    </div>
    <div class="" style="overflow-x:auto">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Pickup</th>
                    <th>Destination</th>
                    <th>Group</th>
                    <th>Crew Commander</th>
                    <th>Lead Vehicle</th>
                    <th>Chase Vehicle</th>

                </tr>
            </thead>
            <tbody>

                <tr>
                    <td>Connaught Place, Delhi</td>
                    <td>Chandni Chowk, Delhi</td>
                    <td rowspan="3">Group1</td>
                    <td rowspan="3"></td>
                    <td rowspan="3"></td>
                    <td rowspan="3"></td>
                </tr>
                <tr>
                    <td>Karol Bagh, Delhi</td>
                    <td>Chandni Chowk, Delhi</td>

                </tr>
                <tr>
                    <td>MG Road, Bengaluru</td>
                    <td>Koramangala, Bengaluru</td>

                </tr>

                <tr>
                    <td>Indiranagar</td>
                    <td>Jayanagar</td>
                    <td rowspan="3">Group2</td>
                    <td rowspan="3"></td>
                    <td rowspan="3"></td>
                    <td rowspan="3"></td>
                </tr>
                <tr>
                    <td>Marine Drive, Mumbai</td>
                    <td>Fort, Mumba</td>

                </tr>
                <tr>
                    <td>Salt Lake, Kolkata</td>
                    <td>Howrah, Kolkata</td>

                </tr>
                <tr>
                    <td>Anna Nagar, Chennai</td>
                    <td>T Nagar, Chennai</td>
                    <td rowspan="3">Group3</td>
                    <td rowspan="3"></td>
                    <td rowspan="3"></td>
                    <td rowspan="3"></td>
                </tr>
                <tr>
                    <td>Sector 18, Noida</td>
                    <td>Sector 62, Noida</td>

                </tr>
                <tr>
                    <td>Karol Bagh, Delhi</td>
                    <td>Chandni Chowk, Delhi</td>

                </tr>

            </tbody>
        </table>
    </div>
</div>  *@

<div class="container-fluid mt-3">
    <div class="d-flex align-items-center mb-3" style="">
        <button class="btn btn-color me-4 " data-bs-toggle="modal" data-bs-target="#assignModal">Vehicle Selection</button>
        <button class="btn btn-color">Shuffle</button>
    </div>
        <div class="" style="overflow-x:auto">
            <table class="table table-bordered ">
                <thead>
                    <tr>
                         
                        <th>Pickup Customer Name</th>
                        <th>Pickup Location</th>
                        <th>Delivery Customer Name</th>
                        <th>Delivery Location</th>
                    <th>Pickup Type</th>
                    <th>Group</th>
                    <th>Crew Commander</th>
                    <th>Lead Vehicle</th>
                    <th>Chase Vehicle</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var group in groupedData)
                    {
                        @foreach(var item in group)
                        {
                            <tr>
                                 <td>   @item.PickupCustomerName</td>
                            <td>@item.PickupLocation </td>
                                 <td>   @item.DeliveryCustomerName</td>
                            <td>@item.DeliveryLocation </td>
                                 <td>@item.PickupType</td>
                                @if (item == group.First())
                                {
                                    <td rowspan="@group.Count()">@group.Key</td>
                                }
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</di>


@* ***************************************Group Modal ******************************************** *@

<!-- Modal Structure -->
<div class="modal fade custom-modal-size" id="assignModal" tabindex="-1" aria-labelledby="assignModalLabel" aria-hidden="true">
    <div class="modal-dialog ">
        <!-- Custom size class applied -->
        <div class="modal-content">
            @*  <div class="modal-header">

            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div> *@
            <div class="modal-body">
                <!-- Nav tabs -->
                <ul class="nav nav-tabs " id="assignTabs" role="tablist">
                    <li class="nav-item " role="presentation">
                        <button class="nav-link active" id="leadVehicle-tab" data-bs-toggle="tab" data-bs-target="#leadVehicleDriver-tab" type="button" role="tab" aria-controls="lead" aria-selected="false">
                            <i class="bi bi-car-front-fill "></i>
                            <span class="ms-1 ">
                                Lead Vehicle
                            </span>
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="chaseVehicle-tab" data-bs-toggle="tab" data-bs-target="#chaseVehicleDriver-tab" type="button" role="tab" aria-controls="Chase" aria-selected="false">
                            <i class="bi bi-truck "></i> <span class="ms-1 ">Chase vehicle </span>
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="crew-tab" data-bs-toggle="tab" data-bs-target="#crewCommandor-tab" type="button" role="tab" aria-controls="crewCommandor" aria-selected="false">  <i class="bi bi-person-badge-fill "></i> <span class="ms-1 ">Crew Commander </span> </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="policeData-tab" data-bs-toggle="tab" data-bs-target="#police-tab" type="button" role="tab" aria-controls="police" aria-selected="false">  <i class="bi bi-shield-fill "></i> <span class="ms-1 ">Police </span> </button>
                    </li>
                </ul>

                <!-- Tab content -->
                <div class="tab-content mt-3" style="height: 200px;">
                    <!-- Lead Vehicle Tab -->
                    <div class="tab-pane fade show active" id="leadVehicleDriver-tab" role="tabpanel" aria-labelledby="leadVehicle-tab">
                        <h5>Select a Lead Vehicle driver to assign tasks:</h5>
                        <div class="p-3">
                            @foreach (var vehicle in Model.Vehicles.Where(v => v.VehicleType == "Lead"))
                            {
                                <div class="form-check d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center gap-2">
                                        <input class="form-check-input lead-vehicle-checkbox" type="checkbox" name="leadVehicleDriver" id="leadVehicleDriver_@vehicle.VehicleID" value="@vehicle.VehicleID">
                                        <i class="bi bi-car-front-fill" style="font-size: 25px;"></i>
                                        <label class="form-check-label" for="leadVehicleDriver_@vehicle.VehicleID">
                                            @vehicle.RegistrationNo
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Chase Vehicle Tab -->
                    <div class="tab-pane fade" id="chaseVehicleDriver-tab" role="tabpanel" aria-labelledby="chaseVehicle-tab">
                        <h5>Select a Chase Vehicle driver to assign tasks:</h5>
                        <div class="p-3">
                            @foreach (var vehicle in Model.Vehicles.Where(v => v.VehicleType == "Chase"))
                            {
                                <div class="form-check d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center gap-2">
                                        <input class="form-check-input chase-vehicle-checkbox" type="checkbox" name="chaseVehicleDriver" id="chaseVehicleDriver_@vehicle.VehicleID" value="@vehicle.VehicleID">
                                        <i class="bi bi-truck" style="font-size: 25px;"></i>
                                        <label class="form-check-label" for="chaseVehicleDriver_@vehicle.VehicleID">
                                            @vehicle.RegistrationNo
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Crew Commander Tab -->
                    <div class="tab-pane fade assignment-container" id="crewCommandor-tab" role="tabpanel" aria-labelledby="crew-tab">
                        <h5>Select a  Crew Commander to assign tasks:</h5>
                        <div class="p-3">
                            @foreach (var crewCommander in Model.CrewCommanders)
                            {
                                <div class="form-check d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center gap-2">
                                        <input class="form-check-input crew-commander-checkbox" type="checkbox" name="crewCommander" id="crewCommander_@crewCommander.CrewCommanderId" value="@crewCommander.CrewCommanderId">
                                        <img src="~/assets/Images/userlogo.jpg" class="rounded-circle" style="width: 30px;" alt="Avatar" />
                                        <label class="form-check-label" for="crewCommander_@crewCommander.CrewCommanderId">
                                            @crewCommander.Name
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="tab-pane fade assignment-container" id="police-tab" role="tabpanel" aria-labelledby="policeData-tab">
                        <h5 style="" class="ps-3 ">  Police to assign tasks:</h5>
                        <div class=" p-3 ">
                            <div class="form-check  d-flex justify-content-between d-flex align-items-center">
                                <div class=" d-flex align-items-center gap-2">
                                    <input class="form-check-input " type="checkbox" name="driver" id="driver1" style="    ">

                                    <img src="~/assets/Images/userlogo.jpg" class="rounded-circle" style="width: 30px;"
                                         alt="Avatar" />
                                    <label class="form-check-label " for="driver1">
                                        Felix L. Dan
                                    </label>
                                </div>

                            </div>
                            <div class="form-check   d-flex justify-content-between align-items-center">
                                <div class="d-flex align-items-center gap-2">
                                    <input class="form-check-input " type="checkbox" name="driver" id="driver2" style=" ">

                                    <img src="~/assets/Images/userlogo.jpg" class="rounded-circle" style="width: 30px;"
                                         alt="Avatar" />
                                    <label class="form-check-label " for="driver2">
                                        Jhon
                                    </label>
                                </div>

                            </div>

                        </div>
                    </div>

                </div>

                <div class="modal-footer d-flex justify-content-between">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-color" id="submitSelection">Assign</button>
                </div>
            </div>
        </div>
    </div>


</div>
<script src="~/js/config.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Add the click event listener to the button with the ID 'submitSelection'
        document.getElementById('submitSelection').addEventListener('click', function () {
            // Collect selected Lead Vehicle IDs as an array
            const leadVehicleIDs = Array.from(document.querySelectorAll('.lead-vehicle-checkbox:checked'))
                .map(checkbox => parseInt(checkbox.value));

            // Collect selected Chase Vehicle IDs as an array
            const chaseVehicleIDs = Array.from(document.querySelectorAll('.chase-vehicle-checkbox:checked'))
                .map(checkbox => parseInt(checkbox.value));

            // Collect selected Crew Commander IDs as an array
            const crewCommanderIDs = Array.from(document.querySelectorAll('.crew-commander-checkbox:checked'))
                .map(checkbox => parseInt(checkbox.value));


            // Check if the number of IDs are the same
            if (leadVehicleIDs.length !== chaseVehicleIDs.length ||
                leadVehicleIDs.length !== crewCommanderIDs.length) {
                alert('The number of IDs for Lead Vehicles, Chase Vehicles, and Crew Commanders must be the same.');
                return; // Exit the function if the counts do not match
            }

            // Prepare the data in the required format
            const requestData = {
                leadID: leadVehicleIDs,
                chaseID: chaseVehicleIDs,
                crewCommanderID: crewCommanderIDs
            };
            console.log("requestData", requestData)
            // Send data to the API using fetch
            fetch(`${API_BASE_URL}/api/VehicleAssignment/AddAssignOrder`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(requestData) // Ensure this matches the expected DTO
            })
                .then(response => {
                    console.log(response); // Log response for debugging
                    if (response.ok) {
                        return response.json();
                    }
                    throw new Error(`Error ${response.status}: ${response.statusText}`);
                })
                .then(data => {
                    alert('Selection submitted successfully!');
                    console.log('Success:', data);
                })
                .catch(error => {
                    // alert(`An error occurred: ${error.message}`);
                    console.error('Error:', error);
                });


        });
    });


</script>

